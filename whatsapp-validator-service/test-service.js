const fetch = require('node-fetch');

const BASE_URL = 'http://localhost:3000';

async function testService() {
    console.log('üß™ Probando microservicio de WhatsApp...\n');

    try {
        // 1. Probar endpoint de estado
        console.log('1Ô∏è‚É£ Probando endpoint /status...');
        const statusResponse = await fetch(`${BASE_URL}/status`);
        const statusData = await statusResponse.json();
        console.log('‚úÖ Estado del servicio:', statusData);
        console.log('');

        // 2. Probar endpoint de prueba
        console.log('2Ô∏è‚É£ Probando endpoint /test...');
        const testResponse = await fetch(`${BASE_URL}/test`);
        const testData = await testResponse.json();
        console.log('‚úÖ Test del servicio:', testData);
        console.log('');

        // 3. Probar verificaci√≥n de n√∫mero (si WhatsApp est√° listo)
        if (statusData.whatsappReady) {
            console.log('3Ô∏è‚É£ Probando verificaci√≥n de n√∫mero...');
            const testNumber = '521332261234'; // N√∫mero de prueba
            const checkResponse = await fetch(`${BASE_URL}/check-whatsapp/${testNumber}`);
            const checkData = await checkResponse.json();
            console.log(`‚úÖ Verificaci√≥n de ${testNumber}:`, checkData);
        } else {
            console.log('3Ô∏è‚É£ ‚è≥ WhatsApp no est√° listo, saltando verificaci√≥n de n√∫mero');
            console.log('   üí° Escanea el c√≥digo QR en http://localhost:3000');
        }

        console.log('\nüéâ Todas las pruebas completadas!');

    } catch (error) {
        console.error('‚ùå Error durante las pruebas:', error.message);
        console.log('\nüí° Aseg√∫rate de que el servicio est√© corriendo:');
        console.log('   npm start');
    }
}

// Ejecutar pruebas
testService(); 